security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        chain_provider:
            chain:
                providers: [app_user_provider, hwi_oauth]
        hwi_oauth: 
            id: hwi_oauth.user.provider.entity
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        # social_auth:
            # pattern: ^/oauth/
            # check_path: /login
            # provider: hwi_oauth
            # security: true
        main:
            lazy: false
            provider: app_user_provider
            # security: true
            form_login:
                # "login" is the name of the route created previously
                login_path: /login
                check_path: /login
            # custom_authenticator: App\Security\UserAuthenticator
            oauth:
                provider: hwi_oauth
                resource_owners:
                    vk:                 "/oauth/login/check-vk"
                    google:             "/oauth/login/check-google"
                login_path:        /login
                # use_forward:       false
                failure_path:      /login
                oauth_user_provider:
                    service: hwi_oauth.user.provider.entity
            logout:
                path: app_logout
                # where to redirect after logout
                # target: main

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/, roles: ROLE_USER }
